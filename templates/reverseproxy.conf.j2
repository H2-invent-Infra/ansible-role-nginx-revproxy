################################################################################
# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!
################################################################################

{% if item.upstreams is defined %}
upstream {{ item.name }}_backend  {
{% for upstream in item.upstreams %}
    server {{upstream.backend_address}}:{{upstream.backend_port}};
{% endfor %}
}
{% endif %}

geo $external_clients {
    192.168.0.0/16  0;
    172.16.0.0/18   0;
    10.0.0.0/8      0;
    default         1;
}

# HTTP Frontend with a redirection to HTTPS
server {

{% for port in item.listen | default(['80']) %}
   listen         {{ port }};
   listen    [::]:{{ port }};
{% endfor %}

   server_name    {{ item.domains | join(' ') }};

   root {{ item.root | default(__nginx_default_root) }};
   index {{ item.index | default(__nginx_default_index) }};

{% for include in item.includes | default([]) %}
   include {{ include }};
{% endfor %}

   location / {
      return         301 https://$host$request_uri;
   }

   location /.well-known/acme-challenge {
      alias /var/www/{{ item.name }}/.well-known/acme-challenge;
   }

   location /check {
      default_type application/json;
      return 200 '{"code":"1", "message": "Success"}';
   }

   access_log /var/log/nginx/{{ item.name }}_access.log;
   error_log /var/log/nginx/{{ item.name }}_error.log error;

}

# HTTPS Frontend with improved SSL/TLS Settings
server {
{% for port in item.listen_ssl | default(['443']) %}
   listen         {{ port }} ssl http2;
   listen    [::]:{{ port }} ssl http2;
{% endfor %}

   server_name    {{ item.domains | join(' ') }};

   root {{ item.root | default(__nginx_default_root) }};
   index {{ item.index | default(__nginx_default_index) }};

{% for include in item.includes | default([]) %}
   include {{ include }};
{% endfor %}

   ssl_certificate {{ nginx_default_ssl_certificate }};
   ssl_certificate_key {{ nginx_default_ssl_certificate_key }};
   ssl_session_timeout 5m;
   ssl_protocols TLSv1.1 TLSv1.2;
   ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
   ssl_prefer_server_ciphers on;
   ssl_session_cache shared:SSL:10m;

{% if item.server_settings is defined %}
{% for setting in item.server_settings %}
   {{ setting }};
{% endfor %}
{% endif %}

   location /.well-known/acme-challenge {
      alias /var/www/{{ item.name }}/.well-known/acme-challenge;
   }

   location /{{ item.proxy_check.secret | default(item.name) }}check {
      allow {{ item.proxy_check.allow_ip | default('127.0.0.1') }};
      deny all;
      default_type application/json;
      return 200 '{"code":"1", "message": "Success"}';
   }

{% if item.proxy_check.destionation is defined %}
   location /{{ item.proxy_check.secret| default(item.name) }}proxy_check {
      allow {{ item.proxy_check.allow_ip | default('127.0.0.1') }};
      deny all;
      proxy_pass {{ item.backend_protocol | default('http') }}://{{ item.name }}_backend/{{ item.proxy_check.destionation }};
   }
{% endif %}

{% for location in item.locations | default(__nginx_default_locations) %}
   {{ location | indent(4) }}
{% endfor %}



   access_log /var/log/nginx/{{ item.name }}_access.log;
   error_log /var/log/nginx/{{ item.name }}_error.log error;

}
