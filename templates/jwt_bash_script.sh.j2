#!/bin/bash

#if [ $# -ne 1 ] ; then
#	echo "------- USAGE OF THE HELPER SCRIPT ---------"
#    echo "Usage: jwt_bash <secret> '{"key":"1","domain":"redmine.api.h2.home","user":"ansible"}'" 
#	echo ""
#	exit 1
#fi 


#
# JWT Encoder Bash Script
#

secret=${1}

# Static header fields.
header='{
	"typ": "JWT",
	"alg": "HS256",
	"iss": "Ansible JWT Generator"
}'

payload="${2}"

# Use jq to set the dynamic `iat` and `exp`
# fields on the header using the current time.
# `iat` is set to now, and `exp` is now + {{ ngninx_revproxy_jwt_exp }} second.
payload=$(
	echo "${payload}" | jq --arg time_str "$(date +%s)" \
	'
	($time_str | tonumber) as $time_num
	| .iat=$time_num
	| .exp=($time_num + {{ ngninx_revproxy_jwt_exp | int }})
	'
)

base64_encode()
{
	declare input=${1:-$(</dev/stdin)}
	# Use `tr` to URL encode the output from base64.
	printf '%s' "${input}" | base64 | tr -d '=' | tr '/+' '_-' | tr -d '\n'
}

json() {
	declare input=${1:-$(</dev/stdin)}
	printf '%s' "${input}" | jq -c .
}

hmacsha256_sign()
{
	declare input=${1:-$(</dev/stdin)}
	printf '%s' "${input}" | openssl dgst -binary -sha256 -hmac "${secret}"
}

header_base64=$(echo "${header}" | json | base64_encode)
payload_base64=$(echo "${payload}" | json | base64_encode)

header_payload=$(echo "${header_base64}.${payload_base64}")
signature=$(echo "${header_payload}" | hmacsha256_sign | base64_encode)

echo "${header_payload}.${signature}"
