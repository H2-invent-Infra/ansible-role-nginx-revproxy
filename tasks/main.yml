---

- name: Install Nginx and ssl-cert
  apt:
    name:
      - nginx
      - ssl-cert
    state: present
  tags:
    - packages

- name: Install python-passlib
  apt:
    name:
      - "python3-passlib"
    state: present
  tags:
    - packages

- include_tasks: ssl-cert.yml
  tags:
    - custom-ssl

- name: Set up nginx directories
  file:
    path: "/etc/nginx/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0640
  with_items:
    - sites-available
    - sites-enabled

- name: Add authentication
  htpasswd:
    path: "/etc/nginx/{{ item.key }}_htpasswd"
    name: "{{ item.value.auth.login }}"
    password: "{{ item.value.auth.password }}"
    owner: root
    group: www-data
    mode: 0640
  with_dict: "{{ nginx_revproxy_sites }}"
  when:
    - item.value.auth is defined

- name: Add Site Config
  template:
    src: reverseproxy.conf.j2
    dest: /etc/nginx/sites-available/{{ item.key }}.conf
    owner: root
    group: root
    mode: 0640
  with_dict: "{{ nginx_revproxy_sites }}"
  when:
    - not item.value.ssl | default(True)
    - not item.value.letsencrypt | default(True)

- name: Add Https Site Config without acme/letsencrpyt
  template:
    src: reverseproxy_ssl.conf.j2
    dest: /etc/nginx/sites-available/{{ item.key }}.conf
    owner: root
    group: root
    mode: 0640
  with_dict: "{{ nginx_revproxy_sites }}"
  when:
    - item.value.ssl | default(False)
    - not item.value.letsencrypt | default(True)

- name: Get all Active Sites
  command: ls -1 /etc/nginx/sites-enabled/
  changed_when: "active.stdout_lines != nginx_revproxy_sites.keys()|sort()"
  check_mode: false
  register: active

- name: De-activate Sites not configurated in the variables
  file:
    path: /etc/nginx/sites-enabled/{{ item }}
    state: absent
  with_items: "{{ active.stdout_lines }}"
  notify: Reload Nginx
  when:
    - item not in nginx_revproxy_sites
    - nginx_revproxy_de_activate_sites

- name: Enable Site Config
  file:
    src: /etc/nginx/sites-available/{{ item.key }}.conf
    dest: /etc/nginx/sites-enabled/{{ item.key }}
    state: link
  with_dict: "{{ nginx_revproxy_sites }}"
  notify: Reload Nginx
  when:
    - not item.value.letsencrypt | default(True)
    - not ansible_check_mode

- name: Create WebRoot sites
  file:
    dest: /var/www/{{ item.key }}/.well-known
    mode: 0775
    state: directory
    owner: www-data
    group: www-data
  with_dict: "{{ nginx_revproxy_sites }}"
  notify: Reload Nginx

- name: WebRoot Permissions Sites
  file:
    dest: /var/www/{{ item.key }}
    mode: 0775
    state: directory
    owner: www-data
    group: www-data
    recurse: true
  with_dict: "{{ nginx_revproxy_sites }}"
  notify: Reload Nginx

- name: Get WebRoot Sites
  command: ls -1 /var/www/
  changed_when: "webroot.stdout_lines != nginx_revproxy_sites.keys()|sort()"
  check_mode: false
  register: webroot

- name: Remove WebRoot Sites
  file:
    path: /var/www/{{ item }}/
    state: absent
  with_items: "{{ webroot.stdout_lines }}"
  notify: Reload Nginx
  when:
    - item not in nginx_revproxy_sites
    - nginx_revproxy_remove_webroot_sites

- include_tasks: letsencrypt.yml
  tags:
    - lesencrypt
